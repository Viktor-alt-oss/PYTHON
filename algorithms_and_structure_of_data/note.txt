Полный набор алгоритмических задач для подготовки к собеседованию в Яндекс
Этот список охватывает все ключевые темы, включая редкие, но важные для Яндекса алгоритмы. Задачи отсортированы по уровню сложности (⭐ — легко, ⭐⭐⭐ — сложно).
________________________________________
(1) Базовые структуры данных

Массивы и строки
1.	Two Sum (LeetCode #1) — найти индексы двух чисел, дающих в сумме target (⭐)
2.	Maximum Subarray (Kadane’s algorithm) — найти подмассив с максимальной суммой (⭐⭐)
3.	Longest Substring Without Repeating Characters — найти длину самой длинной подстроки без повторов (⭐⭐)
4.	Rotate Array — сдвинуть массив на k шагов (⭐)
5.	Trapping Rain Water — посчитать "воду" между столбцами (⭐⭐⭐)
Связные списки
6.	Reverse Linked List — развернуть список (⭐)
7.	Merge Two Sorted Lists — слияние двух отсортированных списков (⭐⭐)
8.	Linked List Cycle — обнаружить цикл (алгоритм Флойда) (⭐⭐)
9.	Copy List with Random Pointer — глубокое копирование (⭐⭐⭐)
Стек и очередь
10.	Valid Parentheses — проверить скобочную последовательность (⭐)
11.	Min Stack — стек с поддержкой минимума за O(1) (⭐⭐)
12.	Implement Queue using Stacks — очередь на двух стеках (⭐⭐)
Хеш-таблицы
13.	Group Anagrams — сгруппировать слова-анаграммы (⭐⭐)
14.	LRU Cache — реализовать кэш с вытеснением (⭐⭐⭐)
________________________________________
(2) Деревья и графы

Бинарные деревья
15.	Invert Binary Tree — инвертировать дерево (⭐)
16.	Validate BST — проверить, является ли дерево BST (⭐⭐)
17.	Lowest Common Ancestor (LCA) — найти общего предка (⭐⭐)
18.	Serialize and Deserialize Binary Tree — преобразовать дерево в строку и обратно (⭐⭐⭐)
Графы
19.	Number of Islands — подсчет "островов" в матрице (DFS/BFS) (⭐⭐)
20.	Course Schedule — топологическая сортировка (⭐⭐)
21.	Dijkstra’s Algorithm — кратчайший путь в графе (⭐⭐⭐)
22.	Kruskal’s Algorithm — минимальное остовное дерево (⭐⭐⭐)
________________________________________
(3) Алгоритмы сортировки и поиска

Сортировки
23.	QuickSort — реализовать (⭐⭐)
24.	MergeSort — реализовать (⭐⭐)
25.	Counting Sort — сортировка подсчетом (⭐)
Бинарный поиск
26.	Search in Rotated Sorted Array — поиск в "сломанном" массиве (⭐⭐)
27.	Find Peak Element — найти локальный максимум (⭐⭐)
________________________________________
(4) Динамическое программирование (DP)

Классические задачи
28.	Climbing Stairs — количество способов подняться по лестнице (⭐)
29.	Coin Change — минимальное число монет для суммы (⭐⭐)
30.	Longest Increasing Subsequence (LIS) — найти самую длинную возрастающую подпоследовательность (⭐⭐⭐)
31.	Edit Distance — расстояние Левенштейна (⭐⭐⭐)
Оптимизация
32.	0/1 Knapsack — задача о рюкзаке (⭐⭐⭐)
33.	Maximum Product Subarray — подмассив с максимальным произведением (⭐⭐)
________________________________________
(5) Жадные алгоритмы

34.	Activity Selection — выбор максимального числа непересекающихся интервалов (⭐⭐)
35.	Gas Station — найти стартовую точку для кругового маршрута (⭐⭐⭐)
________________________________________
(6) Битовая магия

36.	Single Number — найти уникальное число в массиве (XOR) (⭐)
37.	Count Set Bits — подсчет единиц в двоичном представлении числа (⭐)
38.	Subsets — генерация всех подмножеств (битовые маски) (⭐⭐)
________________________________________
(7) Продвинутые структуры данных
Деревья

39.	AVL Tree — реализовать балансировку (⭐⭐⭐)
40.	Trie — реализовать поиск слов (⭐⭐)
Графы
41.	Tarjan’s Algorithm — поиск мостов в графе (⭐⭐⭐)
42.	Floyd-Warshall — кратчайшие пути между всеми вершинами (⭐⭐⭐)
________________________________________
(8) Системный дизайн (базовый уровень)

43.	Design TinyURL — сокращатель ссылок (⭐⭐)
44.	Design Cache — реализация LRU-кэша (⭐⭐⭐)
________________________________________
(9) Многопоточность

45.	Print in Order — вывод в определенном порядке (мьютексы) (⭐⭐)
46.	Dining Philosophers — задача об обедающих философах (⭐⭐⭐)
________________________________________
(10) Редкие, но важные для Яндекса

47.	Suffix Array — построение суффиксного массива (⭐⭐⭐)
48.	Aho-Corasick Algorithm — поиск множества подстрок (⭐⭐⭐)
49.	FFT (Fast Fourier Transform) — умножение полиномов (⭐⭐⭐)
